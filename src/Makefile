# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Where to find user code.
USER_DIR = .

# Points to the root of OpenSSL, relative to where this file is.
# Remember to tweak this if you move this file.
SSL_DIR = ../openssl

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(SSL_DIR)/include -isystem $(SSL_DIR)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -Wconversion -pthread -std=c++11

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TOOL = sevtool

# All OpenSSL headers. Usually you shouldn't change this.
SSL_HEADERS = $(SSL_DIR)/include/openssl/*.h \
              $(SSL_DIR)/include/internal/*.h

# House-keeping build targets.

all : $(TOOL)

clean :
	rm -f $(TOOL) *.o


# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

SRCS= $(wildcard ${USER_DIR}/*.cc)
OBJS= $(SRCS:.cc=.o)
$(OBJS) : $(USER_DIR)/sevapi.h $(USER_DIR)/utilities.h $(SSL_HEADERS)

.cc.o: $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/$^

sevtool : $(OBJS) $(SSL_DIR)/libssl.a $(SSL_DIR)/libcrypto.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -ldl -o $@

